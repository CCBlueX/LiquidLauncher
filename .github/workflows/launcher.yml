name: liquidlauncher

on: [push]

jobs:
  build_launcher:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            suffix: ''
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            suffix: .exe
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name:  Install libraries
        run:   |
          if [ "$RUNNER_OS" == "Linux" ]; then
               sudo apt update
               sudo apt install libgtk-3-dev libsoup2.4-dev libwebkit2gtk-4.0-dev
          elif [ "$RUNNER_OS" == "Windows" ]; then
               echo "No libs required"
          else
               echo "$RUNNER_OS not supported"
               exit 1
          fi
        shell: bash

      - name: Install nightly toolchain
        run:  rustup toolchain install nightly

      - name: Build
        run: cargo +nightly build --release

      - name: Run tests
        run: cargo +nightly test

      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: liquidlauncher-barebone-${{ matrix.target }}
          path: target/release/liquidlauncher${{ matrix.suffix }}

  build_app:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: app/package-lock.json
      - name: Build UI
        run: |
          cd app
          npm install
          npm run build

      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: liquidlauncher-app
          path: app/public

  build_unpacker:
    needs: [build_launcher, build_app]
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            suffix: ''
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            suffix: .exe
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: unpacker/.cargo/registry
          key: unpacker-${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: unpacker/.cargo/git
          key: unpacker-${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: unpacker/target
          key: unpacker-${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions/download-artifact@v3
        with:
          name: liquidlauncher-app
          path: unpacker/data/app

      - uses: actions/download-artifact@v3
        with:
          name: liquidlauncher-barebone-${{ matrix.target }}
          path: unpacker/data

      - name: Download and extract Sciter and copy into unpacker
        run: |
          curl https://gitlab.com/sciter-engine/sciter-js-sdk/-/archive/5.0.0.9/sciter-js-sdk-5.0.0.9.zip -o sciter.zip
          7z x sciter.zip
         
          if [ "$RUNNER_OS" == "Linux" ]; then
                cp sciter-js-sdk-5.0.0.9/bin/linux/x64/libsciter.so unpacker/data/libsciter-gtk.so
          elif [ "$RUNNER_OS" == "Windows" ]; then
                cp sciter-js-sdk-5.0.0.9/bin/windows/x64/sciter.dll unpacker/data/
          elif [ "$RUNNER_OS" == "macOS" ]; then
                cp sciter-js-sdk-5.0.0.9/bin/macosx/x64/libsciter.dylib unpacker/data/
          else
               echo "$RUNNER_OS not supported"
               exit 1
          fi
        shell: bash

      - name: Display structure of launcher data
        run: ls -R unpacker/data

      - name: Build unpacker
        run: |
          cd unpacker
          cargo build --release

      - name: Rename unpacker
        run: mv unpacker/target/release/unpacker${{ matrix.suffix }} unpacker/target/release/LiquidLauncher${{ matrix.suffix }}

      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: liquidlauncher-installer-${{ matrix.target }}
          path: unpacker/target/release/LiquidLauncher${{ matrix.suffix }}